// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using MyCare.Domin;

namespace MyCare.Domin.Migrations
{
    [DbContext(typeof(MyCareDBContext))]
    partial class MyCareDBContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasDefaultSchema("MyCare")
                .UseIdentityColumns()
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.0");

            modelBuilder.Entity("MyCare.Domin.Entities.People", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<DateTime>("DOB")
                        .HasColumnType("datetime2");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("People");
                });

            modelBuilder.Entity("MyCare.Domin.Entities.Task", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<DateTimeOffset>("Date")
                        .HasColumnType("datetimeoffset");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Duration")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("People_Id")
                        .HasColumnType("int");

                    b.Property<int?>("Venue_Id")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("People_Id");

                    b.HasIndex("Venue_Id");

                    b.ToTable("Task");
                });

            modelBuilder.Entity("MyCare.Domin.Entities.Timesheet", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<DateTimeOffset>("Date")
                        .HasColumnType("datetimeoffset");

                    b.Property<int>("Duration")
                        .HasColumnType("int");

                    b.Property<int?>("People_Id")
                        .HasColumnType("int");

                    b.Property<int?>("Task_Id")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("People_Id");

                    b.HasIndex("Task_Id");

                    b.ToTable("Timesheet");
                });

            modelBuilder.Entity("MyCare.Domin.Entities.Venue", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Venue");
                });

            modelBuilder.Entity("MyCare.Domin.Entities.Task", b =>
                {
                    b.HasOne("MyCare.Domin.Entities.People", "People")
                        .WithMany()
                        .HasForeignKey("People_Id");

                    b.HasOne("MyCare.Domin.Entities.Venue", "Venue")
                        .WithMany()
                        .HasForeignKey("Venue_Id");

                    b.Navigation("People");

                    b.Navigation("Venue");
                });

            modelBuilder.Entity("MyCare.Domin.Entities.Timesheet", b =>
                {
                    b.HasOne("MyCare.Domin.Entities.People", "People")
                        .WithMany()
                        .HasForeignKey("People_Id");

                    b.HasOne("MyCare.Domin.Entities.Task", "Task")
                        .WithMany()
                        .HasForeignKey("Task_Id");

                    b.Navigation("People");

                    b.Navigation("Task");
                });
#pragma warning restore 612, 618
        }
    }
}
